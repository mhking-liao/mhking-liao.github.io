[{"uri":"/zh/philosophy/","title":"人生哲学","tags":[],"description":"","content":"有志者事竟成 人生的幸福，一半要争，一半要随。 争，不是与他人，而是与困苦。 没有唾手可得的幸福，发愤图强，主动争取才能一步步接近幸福。 随，不是随波逐流，而是知止而后安。 能力与条件的限制，很多人事只能随遇而安，随缘而止。 争，人生少遗憾； 随，知足者常乐。最怕该争时不争，该止时不止，总在纠结中痛苦着。"},{"uri":"/zh/hugo/","title":"Hugo","tags":[],"description":"","content":"Hugo  世界上最快的网站建设框架\nHugo是最流行的开源静态站点生成器之一。凭借其惊人的速度和灵活性，Hugo使网站建设再次充满乐趣。\n欢迎来到我的博客！\n"},{"uri":"/zh/basics/","title":"基础知识","tags":[],"description":"","content":"第X章 一些章节标题 欢迎来到我的网站！\n"},{"uri":"/zh/","title":"MHKING BOLG","tags":[],"description":"","content":""},{"uri":"/zh/basics/first/","title":"第一章","tags":[],"description":"","content":"1.目录命令： chapter=true在顶部，这意味着这个页面是一个章节，\n默认情况下，所有章节和页面都创建为草稿。如果要呈现这些页面，请删除该属性draft: true 从元数据。\ndraft: true\t#隐藏文章 draft: fault\t#显示文章 hugo new --kind chapter basics/_index.md 2.文章命令： 通过添加一些示例内容并替换title文件开头的值，可以随意编辑这些文件。\nhugo new basics/first-content.md hugo new basics/second-content/_index.md 3.网页图标 如果您的图标是 png，只需将您的图像放在本地 static/images/ 文件夹并命名 favicon.png\n如果您需要更改此默认位置，请在 layouts/partials/ 命名 favicon.html. 然后像这样写：\n\u0026lt;link rel=\u0026#34;shortcut icon\u0026#34; href=\u0026#34;/images/favicon.png\u0026#34; type=\u0026#34;image/x-icon\u0026#34; /\u0026gt; 4.网页颜色 [params]\n*# Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;.* themeVariant = \u0026#34;green\u0026#34; "},{"uri":"/zh/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/zh/hugo/github%E4%BB%A3%E7%A0%81%E5%90%8C%E6%AD%A5%E8%87%B3%E6%9C%AC%E5%9C%B0%E8%A6%86%E7%9B%96/","title":"github","tags":["命令"],"description":"","content":"一、github代码同步至本地（覆盖） (1) 更新远程仓库的代码为最新的 git fetch \u0026ndash;all\n(2) 让本地代码与origin/main完全相同 git reset \u0026ndash;hard origin/main\n(3) git pull origin main\n二、github本地同步至仓库 1、（先进入项目文件夹）通过命令 git init 把这个目录变成git可以管理的仓库\ngit init 2、把文件添加到版本库中，使用命令 git add .添加到暂存区里面去，不要忘记后面的小数点“.”，意为添加文件夹下的所有文件\ngit add . 3、用命令 git commit告诉Git，把文件提交到仓库。引号内为提交说明\ngit commit -m 'first commit' 4、关联到远程库\ngit remote add origin 你的远程库地址 如：\ngit remote add origin https://github.com/cade8800/ionic-demo.git 5、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）\ngit pull --rebase origin main 6、把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。\ngit push -u origin main *、状态查询命令\ngit status 三、Git上传、覆盖、删除 然后通过以下指令初始化，把这个项目所在目录变成Git可以管理的仓库。\ngit init 成功后，复制仓库的ssh地址，并输入以下指令：\ngit remote add origin 仓库ssh地址 也可以用以下指令删除关联：\ngit remote rm origin 也可以通过以下指令更换仓库：\ngit remote set-url origin 仓库ssh地址 更换后，可以用查询查看是否更换成功。\n添加上传 将全部内容添加，先输入以下指令：\ngit add . 如果是指定目录，就改为以下指令：\ngit add 目录 如果是指定文件，就改为以下指令：\ngit add 文件.后缀 之后，再输入以下指令：\ngit commit -m \u0026#34;把文件提交，这里是注释\u0026#34; 到这里，你的添加并没有上传到仓库，只是添加到了暂存区，上传到仓库还需要输入以下指令：\ngit push -u origin main 最后，还会有个提示，输入 yes 即可。\n删除 通过以下指令删除指定文件：\ngit em 文件.后缀 通过以下指令可以删除指定文件夹：\ngit em -r 文件夹 最后，必要通过以下指令提交修改：\ngit commit -m \u0026#34;注释\u0026#34; 查询 查看本地分支：\ngit branch 查看关联仓库地址：\ngit remote -v 补充：pull是下拉文件覆盖 or 更新，push是上传文件覆盖 or 更新 "},{"uri":"/zh/hugo/go%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85hugo/","title":"go语言","tags":["安装"],"description":"","content":"go语言编译安装Hugo 二、安装go mkdir ~/home_opt\t#home下软件安装包位置的home_opt，可设置自己的位置 cd ~/home_opt wget -c https://go.dev/dl/go1.17.3.linux-amd64.tar.gz sudo tar -xz go1.17.3.linux-amd64.tar.gz mv -f go go_install\t#重命名 sudo mv -f go_install /usr/local\t#移动到安装区 cd /usr/local sudo chmod -R 0777 go_install 添加到$PATH环境变量\nGOROOT是系统上安装Go软件包的位置\nGOPATH是工作目录的位置\n# src：go在包安装、文件编译时自动寻找区，bin：go执行命令区 mkdir ~/home_opt/go_work ~/home_opt/go_work/src ~/home_opt/go_work/bin\t#go工作区 sudo chmod -R 0777 go_work 修改环境变量，我的shell改为zsh了。\nsudo gedit ~/.zshrc #内容： export GOROOT=/usr/local/go_install export GOPATH=~/home_opt/go_work export PATH=$GOPATH/bin:$GOROOT/bin:$PATH source ~/.zshrc\t#环境变量生效 export\t#输出 默认shell的修改使用下面的：\necho $shell\t#查看默认shell sudo gedit ~/.bashrc source ~/.bashrc\t#环境变量生效 export\t#输出 效果：关闭shell，重启终端输入（任意shell能输出版本）\ngo version 二、编译hugo 官网安装（Mac，windows，linux如下）\nmkdir ~/home_opt/src cd ~/home_opt/src git clone https://github.com/gohugoio/hugo.git cd hugo go install #错误： go: github.com/bep/debounce@v1.2.0: Get \u0026#34;https://proxy.golang.org/github.com/bep/debounce/@v/v1.2.0.mod\u0026#34;: EOF #国内ping不通proxy.golang.org #输入以下即可： go env -w GOPROXY=https://goproxy.cn hugo version "},{"uri":"/zh/hugo/hugo%E5%AE%89%E8%A3%85/","title":"Hugo to Github","tags":["博客","安装"],"description":"","content":"Hugo安装 一、安装Git sudo apt install git 配置ssh 二、hugo安装 https://github.com/gohugoio/hugo/releases\n  下载最新的扩展版本 ( hugo_extended_0.89.4_Linux-64bit.tar.gz)。   创建一个新目录： mkdir hugo   将您下载的文件解压缩到hugo.   切换到新目录： cd hugo   安装雨果： sudo install hugo /usr/bin   版本 hugo version   三、配置本地站点 1.建立本地站点 # 在建立站点 mkdir ~/home_opt/blog cd ~/home_opt/blog hugo new site hugo_blog cd hugo_blog cd ~/home_opt/blog/hugo_blog git init\t#将~/home_opt/blog/hugo_blog设置为空的初始化仓库,github默认仓库链接到hugo_blog git status\t#文件变动 git add .\t#文件变动指定目录，.代表全部 git commit -m \u0026#34;first commit\u0026#34;\t#文件变动提交至暂存区 2.添加博客主题，就是样式 https://themes.gohugo.io/\n#推荐git submodule add theme-* themes/theme-* #git clone（好多主题都不推荐的，写的是有些内容可能显示异常） #一个主题对应一个作者的github仓库，submodule add将他人仓库链接到自己的仓库，主题更新时我们的网页主题同步更新 git submodule add https://github.com/kakawait/hugo-tranquilpeak-theme.git themes/hugo-tranquilpeak-theme themes/hugo-tranquilpeak-theme #自己看主题配置，每个主题都不同，都需要修改一些配置。有些还要装插件 cd ~/home_opt/blog/hugo_blog # 一般主题会有一个配置好的文件，在exampleSite下，替换站点根目录下的config.toml即可 rm -rf config.toml cd /themes/hugo-theme-*** cp -rf /exampleSite/config.toml ~/home_opt/hugo_blog 3.添加一篇文章（markdown格式） #网页文章一般以markdown格式写作，位置：content/post hugo new content/post/test_post.md gedit content/post/test_post.md\t#hugo命令建立md，自动带模板 --- title: \u0026#34;Test_post\u0026#34; date: 2021-11-23T18:44:37+08:00 draft: true --- # 有志者事竟成 ### 人生的幸福，一半要争，一半要随。争，不是与他人，而是与困苦。没有唾手可得的幸福，发愤图强，主动争取才能一步步接近幸福。随，不是随波逐流，而是知止而后安。能力与条件的限制，很多人事只能随遇而安，随缘而止。争，人生少遗憾；随，知足者常乐。最怕该争时不争，该止时不止，总在纠结中痛苦着。 hugo server 浏览器输入：http://localhost:1313/ 四、上传Hugo至Github git status git add . git commit -m \u0026#34;ready to upload\u0026#34; git branch -M main\t#命名分支为main #github仓库为空，本地仓库添加github仓库地址 git remote add origin https://github.com/mhking-liao/mhking-liao.github.io.git git push -u origin main\t#改动文件上传至github 建立工作流，这是静态网页生成脚本，hugo官网有介绍，Host on GitHub mkdir .github cd .github mkdir workflows cd workflows vim gh-pages.yml #内容： name: github pages on: push: branches: - main # Set a branch to deploy pull_request: jobs: deploy: runs-on: ubuntu-20.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public cd ~/home_opt/blog/hugo_blog git status git add . git commit -m \u0026#34;deploy\u0026#34; git push #修改config.toml文件 baseURL = \u0026#34;github地址\u0026#34; disqusShortname = \u0026#34;hugo-tranquilpeak-theme\u0026#34; git status git add . git commit -m \u0026#34;update toml\u0026#34; git push #自用样本，可自写sh脚本 git status git add . git commit -m \u0026#34;Article update 2021.11.24_11:45\u0026#34; git push githut分支源默认改为gh-pages  总结： 虽说国内外教程挺多，但是一堆坑还不一定能弄完，有搞一半就没了，多多少少有缺斤少两的。（windows坑最多，hexo兼容最差，那个npm一言难尽，一堆过期包，修都要半天，主题都没法装） 最后两步骤，上传Hugo源码和静态文件的就没几个讲清楚的，整完主题不能显示的一堆\u0026hellip;..themes没链接好，还是太小白，大神不大想讲 学好github的分布式开发吧。用官网的安装方式就行，个人向的水平参差不齐。  Hugo And Deploy To Github：https://www.youtube.com/watch?v=psyz4UPnGAA\u0026amp;ab_channel=CodeNanshu 这是讲的最好的\n Creating a Blog with Hugo and Github in 10 minutes：https://www.youtube.com/watch?v=LIFvgrRxdt4\u0026amp;ab_channel=RyanSchachte\n使用Hugo和GitHub搭建博客： https://zhuanlan.zhihu.com/p/150095964\nGitHub+Hexo 搭建个人网站详细教程：https://zhuanlan.zhihu.com/p/26625249\n"},{"uri":"/zh/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"/zh/tags/%E5%8D%9A%E5%AE%A2/","title":"博客","tags":[],"description":"","content":""},{"uri":"/zh/tags/%E5%91%BD%E4%BB%A4/","title":"命令","tags":[],"description":"","content":""},{"uri":"/zh/tags/%E5%AE%89%E8%A3%85/","title":"安装","tags":[],"description":"","content":""},{"uri":"/zh/categories/%E5%AE%B6%E4%B8%AD/","title":"家中","tags":[],"description":"","content":""},{"uri":"/zh/categories/%E5%B9%BF%E8%A5%BF%E8%B4%B5%E6%B8%AF/","title":"广西贵港","tags":[],"description":"","content":""},{"uri":"/zh/hugo/markdown-%E8%B0%83%E6%95%B4%E5%9B%BE%E7%89%87%E4%BD%8D%E7%BD%AE%E4%B8%8E%E5%A4%A7%E5%B0%8F/","title":"","tags":[],"description":"","content":"Markdown 调整图片位置与大小 使用 Markdown 编写文档或博客时，经常需要对图片的位置与尺寸进行调整。\n插入图片后，Markdown 表示图片的语法格式如下：\n![图片描述](图片URL地址) 调整图片位置 居左 （1）方法一：添加位置标识。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200822014538211.png#pic_left) （2）方法二：嵌入 HTML 代码。\n\u0026lt;div align=\u0026#34;left\u0026#34;\u0026gt; \u0026lt;img src=https://img-blog.csdnimg.cn/20200822014538211.png /\u0026gt; \u0026lt;/div\u0026gt; 居中 （1）方法一：添加位置标识。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200822014538211.png#pic_center) （2）方法二：嵌入 HTML 代码。\n\u0026lt;div align=\u0026#34;center\u0026#34;\u0026gt; \u0026lt;img src=https://img-blog.csdnimg.cn/20200822014538211.png /\u0026gt; \u0026lt;/div\u0026gt; 居右 （1）方法一：添加位置标识。\n![在这里插入图片描述](https://img-blog.csdnimg.cn/20200822014538211.png#pic_right) （2）方法二：嵌入 HTML 代码。\n\u0026lt;div align=\u0026#34;right\u0026#34;\u0026gt; \u0026lt;img src=https://img-blog.csdnimg.cn/20200822014538211.png /\u0026gt; \u0026lt;/div\u0026gt; 调整图片大小 等比缩放 相对于父级窗口 使用百分比只定义宽即可等比例缩放。注意：宽度相对于图片所在父级窗口。\n\u0026lt;img src=https://img-blog.csdnimg.cn/20200822014538211.png width=60% /\u0026gt; 相对于自身 非等比缩放 将图片的宽高缩小或放大为原来的指定百分比。\n 固定宽高 \u0026lt;img src=https://img-blog.csdnimg.cn/20200822014538211.png width=200 height=100 /\u0026gt; "},{"uri":"/zh/hugo/picgo%E5%AE%89%E8%A3%85/","title":"","tags":[],"description":"","content":"PICgo\nhttps://github.com/Molunerfinn/PicGo/releases\n"},{"uri":"/zh/hugo/%E8%85%BE%E8%AE%AFcos+typora+picgo/","title":"","tags":[],"description":"","content":"腾讯cos+typora+picgo，腾讯云cos\nmarkdown显示，而博客网页不显示：腾讯云存储修改公开权限\n"}]